<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Список изделий</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.0/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>

    <h2>Список изделий</h2>

    <p>Введите значение в поле "Имя" чтобы отфильтровать список. Если поле имя пустое, то при нажатии на кнопку будет показан весь список</p>

    <form name="userForm">
        <input type="hidden" name="id" value="0" />
        <div class="form-group col-md-5">
            <label for="name">Имя:</label>
            <input class="form-control" name="name" />
        </div>
        <div class="panel-body">
            <button type="submit" id="submit" class="btn btn-primary">Отфильтровать</button>
            <a id="reset" class="btn btn-primary">Сбросить</a>
        </div>
    </form>

    <p></p>

    <p>Напротив продукта нажмите "Изменить", а затем "Добавить/изменить продукт" - для изменения</p>

    <p> Нажмите "Сбросить, чтобы очистить поля модального окна</p>

    <p></p>

    <a class="popup-open" href="#">Добавить/изменить продукт</a>

    <p></p>

    <table id="table" class="table table-condensed table-striped  col-md-6">
        <thead><tr><th>Id</th><th>Имя</th><th>Описание</th><th></th></tr></thead>
        <tbody>
        </tbody>
    </table>


    <div class="popup-fade">
        <div class="popup">
            <a class="popup-close" href="#">Закрыть</a>
            <form name="userForm2">
                <div class="form-group col-md-5">
                    <label for="id">ID:</label>
                    <input class="form-control" name="id" />
                </div>
                <div class="form-group col-md-5">
                    <label for="name">Имя:</label>
                    <input class="form-control" name="name" />
                </div>
                <div class="form-group col-md-5">
                    <label for="description">Описание:</label>
                    <input class="form-control" name="description" />
                </div>

                <div class="panel-body">
                    <button type="submit" id="submit" class="btn btn-primary">Сохранить</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://yandex.st/jquery/2.1.1/jquery.min.js"></script>

    <script>
        $(document).ready(function ($) {
            $('.popup-open').click(function () {
                $('.popup-fade').fadeIn();
                return false;
            });

            $('.popup-close').click(function () {
                $(this).parents('.popup-fade').fadeOut();
                return false;
            });

            $(document).keydown(function (e) {
                if (e.keyCode === 27) {
                    e.stopPropagation();
                    $('.popup-fade').fadeOut();
                }
            });

            $('.popup-fade').click(function (e) {
                if ($(e.target).closest('.popup').length == 0) {
                    $(this).fadeOut();
                }
            });
        });
    </script>

    <script>
        // Получение всех пользователей
        async function GetUsers() {
            // отправляет запрос и получаем ответ
            const response = await fetch("/api/products", {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            // если запрос прошел нормально
            if (response.ok === true) {
                // получаем данные
                const users = await response.json();
                let rows = document.querySelector("tbody");
                users.forEach(user => {
                    // добавляем полученные элементы в таблицу
                    rows.append(row(user));
                });
            }
        }
        // Получение одного пользователя
        async function GetUser(id) {
            const response = await fetch("/api/products/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const user = await response.json();
                const form = document.forms["userForm2"];
                form.elements["id"].value = user.id;
                form.elements["name"].value = user.name;
                form.elements["description"].value = user.description;
            }
        }
        // Добавление пользователя
        async function CreateUser(userName, userdescription) {

            const response = await fetch("api/products", {
                method: "POST",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    name: userName,
                    description: userdescription
                })
            });
            if (response.ok === true) {
                const user = await response.json();
                reset();
                document.querySelector("tbody").append(row(user));
            }
        }
        // Изменение пользователя
        async function EditUser(userId, userName, userdescription) {
            const response = await fetch("api/products", {
                method: "PUT",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    id: userId,
                    name: userName,
                    description: userdescription
                })
            });
            if (response.ok === true) {
                const user = await response.json();
                reset();
                document.querySelector("tr[data-rowid='" + user.id + "']").replaceWith(row(user));
            }
        }

        // Филльтр пользователя
        async function FilterUser(userName) {
            const response = await fetch("/api/products/" + userName, {
                method: "POST",
                headers: { "Accept": "application/json" },
                body: JSON.stringify({
                    name: userName
                })
            });
            if (response.ok === true) {
                // получаем данные
                const users = await response.json();
                let rows = document.querySelector("tbody");
                users.forEach(user => {
                    // добавляем полученные элементы в таблицу
                    reset();
                    rows.append(row(user));
                });
            }
        }

        // Удаление пользователя
        async function DeleteUser(id) {
            const response = await fetch("/api/products/" + id, {
                method: "DELETE",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const user = await response.json();
                document.querySelector("tr[data-rowid='" + user.id + "']").remove();
            }
        }

        // сброс формы
        function reset() {
            const form = document.forms["userForm2"];
            form.reset();
            form.elements["id"].value = 0;
        }
        // создание строки для таблицы
        function row(user) {

            const tr = document.createElement("tr");
            tr.setAttribute("data-rowid", user.id);

            const idTd = document.createElement("td");
            idTd.append(user.id);
            tr.append(idTd);

            const nameTd = document.createElement("td");
            nameTd.append(user.name);
            tr.append(nameTd);

            const descriptionTd = document.createElement("td");
            descriptionTd.append(user.description);
            tr.append(descriptionTd);

            const linksTd = document.createElement("td");

            const editLink = document.createElement("a");
            editLink.setAttribute("data-id", user.id);
            editLink.setAttribute("style", "cursor:pointer;padding:15px;");
            editLink.append("Изменить");
            editLink.addEventListener("click", e => {

                e.preventDefault();
                GetUser(user.id);


            });
            linksTd.append(editLink);

            const removeLink = document.createElement("a");
            removeLink.setAttribute("data-id", user.id);
            removeLink.setAttribute("style", "cursor:pointer;padding:15px;");
            removeLink.append("Удалить");
            removeLink.addEventListener("click", e => {

                e.preventDefault();
                DeleteUser(user.id);
            });

            linksTd.append(removeLink);
            tr.appendChild(linksTd);

            return tr;
        }

        function deleteall() {
            var table = document.getElementById("table");
            for (var i = table.rows.length - 1; i > 0; i--) {
                table.deleteRow(i);
            }
        }

        // сброс значений формы
        document.getElementById("reset").click(function (e) {

            e.preventDefault();
            reset();
        })

        // отправка формы
        document.forms["userForm"].addEventListener("submit", e => {
            e.preventDefault();
            const form = document.forms["userForm"];
            const name = form.elements["name"].value;
            if (name == "") {

                deleteall();

                GetUsers();
            }
            else {

                deleteall();

                FilterUser(name);
            }
        });

        // отправка формы
        document.forms["userForm2"].addEventListener("submit", e => {
            e.preventDefault();
            const form = document.forms["userForm2"];
            const id = form.elements["id"].value;
            const name = form.elements["name"].value;
            const description = form.elements["description"].value;
            if (id == 0) {
                CreateUser(name, description);
            }
            else {
                EditUser(id, name, description);
            }

        });

        // загрузка пользователей
        GetUsers();

    </script>
</body>
</html>